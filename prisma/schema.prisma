// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

   model Quotation {
     id                  String   @id @default(cuid())
     quotationNo         String   @unique
     date                String
     company             String
     myCompany           String?
     project             String
     title               String
     amount              Float
     pdfUrl              String
     annexureUrl         String?
     toAddress           String
     attn                String
     currency            String
     emailTo             String
     emailCC             String?
     salesperson         String?
     customerReferences  String?
     paymentTerms        String?
     dueDate             String?
     discountType        String
     discountValue       String
     taxRate             String
     poNo                String?
     poFileUrl           String?
     internalStatus      String
     externalStatus      String
     createdBy           String?
     createdByRole       String?
     createdByDepartment String?
     creatorType         String?
     forDepartment       String?
     status              String?
     isRequested         Boolean?
     clientApprovalDate  String?
     poNumber            String?
     poFile              String?
     items               QuotationItem[]
     terms               Term[]
     actionHistories     ActionHistory[]
     requestId           String?
   }

   model QuotationItem {
     id           Int      @id @default(autoincrement())
     quotationId  String
     system       String?
     description  String?  @db.Text
     unit         String?
     qty          String?
     amount       String?
     quotation    Quotation @relation(fields: [quotationId], references: [id])
   }

   model Term {
     id           Int      @id @default(autoincrement())
     quotationId  String
     content      String   @db.Text
     quotation    Quotation @relation(fields: [quotationId], references: [id])
   }

   model ActionHistory {
     id          Int        @id @default(autoincrement())
     quotation   Quotation  @relation(fields: [quotationId], references: [id])
     quotationId String
     action      String
     createdAt   DateTime   @default(now())
   }

   model QuotationRequest {
     id               String   @id @default(cuid())
     customerName     String
     project          String
     title            String
     description      String
     company          String
     date             String
     status           String
     userEmail        String?
     actionHistories  QuotationRequestActionHistory[]
   }

   model QuotationRequestActionHistory {
     id                  Int               @id @default(autoincrement())
     quotationRequest    QuotationRequest  @relation(fields: [quotationRequestId], references: [id])
     quotationRequestId  String
     action              String
     createdAt           DateTime          @default(now())
   }

   model User {
     id           Int      @id @default(autoincrement())
     email        String   @unique
     name         String
     phoneNumber  String?
     password     String
     type         String
     internalType String?
     externalType String?
     company      String?
     department   String?
     permissions  String?  // Store as JSON string if needed
   }